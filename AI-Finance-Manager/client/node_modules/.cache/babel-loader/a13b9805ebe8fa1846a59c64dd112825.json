{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAYANT KUMAR\\\\Desktop\\\\AI-Finance-Manager\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './App2.css';\nimport Dashboard from './Dashboard';\nimport PrintableReport from './PrintableReport';\nimport ReactToPrint from 'react-to-print';\nconst App = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [input, setInput] = useState({\n    amount: '',\n    description: '',\n    category: ''\n  });\n  const [advice, setAdvice] = useState('');\n  const [showAdvice, setShowAdvice] = useState(false);\n  const [showCharts, setShowCharts] = useState(false);\n  const [adviceClicked, setAdviceClicked] = useState(false);\n  const [activeTab, setActiveTab] = useState('addTransaction');\n  const [goal, setGoal] = useState({\n    name: '',\n    amount: '',\n    months: ''\n  });\n  const [goalSet, setGoalSet] = useState(false);\n  const printRef = useRef();\n  useEffect(() => {\n    axios.get('/api/transactions').then(res => setTransactions(res.data)).catch(err => console.error('Error fetching transactions:', err));\n  }, []);\n  const totalSpent = transactions.reduce((sum, t) => sum + Number(t.amount), 0);\n  const getMonthKey = dateStr => {\n    const date = new Date(dateStr);\n    return `${date.getFullYear()}-${date.getMonth() + 1}`;\n  };\n  const monthsSet = new Set(transactions.map(t => getMonthKey(t.date || new Date())));\n  const monthsCount = monthsSet.size || 1;\n  const averageSpentPerMonth = totalSpent / monthsCount;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/api/transactions', input);\n      setTransactions([...transactions, res.data]);\n      setInput({\n        amount: '',\n        description: '',\n        category: ''\n      });\n    } catch (err) {\n      console.error('Error adding transaction:', err);\n    }\n  };\n  const getAdvice = async () => {\n    if (transactions.length === 0) {\n      alert(\"Please add some transactions before requesting advice.\");\n      return;\n    }\n    setAdviceClicked(true);\n    const context = transactions.map(t => `${t.description} - $${t.amount} (${t.category})`).join('\\n');\n    try {\n      var _res$data;\n      const res = await axios.post('/api/ai/advice', {\n        context\n      });\n      if ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.reply) {\n        setAdvice(res.data.reply);\n        setShowAdvice(true);\n      } else {\n        setAdvice('AI could not provide advice.');\n        setShowAdvice(true);\n      }\n    } catch (err) {\n      console.error('Error fetching AI advice:', err);\n      setAdvice('Failed to get advice. Check server.');\n      setShowAdvice(true);\n    }\n    setTimeout(() => {\n      setAdviceClicked(false);\n    }, 1500);\n  };\n  const handleNewSession = () => {\n    setTransactions([]);\n    setAdvice('');\n    setShowAdvice(false);\n    setShowCharts(false);\n    setActiveTab('addTransaction');\n    setGoal({\n      name: '',\n      amount: '',\n      months: ''\n    });\n    setGoalSet(false);\n  };\n  const handleGoalSubmit = e => {\n    e.preventDefault();\n    if (!goal.amount || !goal.months || goal.amount <= 0 || goal.months <= 0) {\n      alert('Please enter valid goal amount and duration.');\n      return;\n    }\n    setGoalSet(true);\n  };\n  const monthlySavingsNeeded = goalSet ? (Number(goal.amount) / Number(goal.months)).toFixed(2) : 0;\n  const progressPercent = goalSet ? Math.min(100, totalSpent / Number(goal.amount) * 100) : 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    style: {\n      width: '300px',\n      height: '300px',\n      top: '10%',\n      left: '10%',\n      animationDelay: '0s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    style: {\n      width: '400px',\n      height: '400px',\n      top: '40%',\n      left: '60%',\n      animationDelay: '5s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    style: {\n      width: '200px',\n      height: '200px',\n      top: '70%',\n      left: '30%',\n      animationDelay: '10s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"animated-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"AI Financial Management System\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, ['addTransaction', 'viewTransactions', 'advice', 'charts', 'goals', 'export'].map(tab => /*#__PURE__*/React.createElement(\"button\", {\n    key: tab,\n    className: activeTab === tab ? 'active-tab' : '',\n    onClick: () => setActiveTab(tab),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, tab === 'addTransaction' ? 'Add Transaction' : tab === 'viewTransactions' ? 'View Transactions' : tab === 'advice' ? 'AI Advice' : tab === 'charts' ? 'Financial Charts' : tab === 'goals' ? 'Goals' : 'Export Report'))), activeTab === 'addTransaction' && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"centered-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: input.amount,\n    placeholder: \"Amount\",\n    onChange: e => setInput({\n      ...input,\n      amount: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input.description,\n    placeholder: \"Description\",\n    onChange: e => setInput({\n      ...input,\n      description: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input.category,\n    placeholder: \"Category\",\n    onChange: e => setInput({\n      ...input,\n      category: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Add Transaction\")), activeTab === 'viewTransactions' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Transactions\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, transactions.map((t, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, t.description, \" - $\", t.amount, \" (\", t.category, \")\")))), activeTab === 'advice' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"get-advice\",\n    onClick: getAdvice,\n    className: adviceClicked ? 'clicked' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Get AI Financial Advice\"), advice && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"toggle-button\",\n    onClick: () => setShowAdvice(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, showAdvice ? 'Hide Advice' : 'Show Advice'), showAdvice && advice && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"advice-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, advice)), activeTab === 'charts' && transactions.length > 0 && /*#__PURE__*/React.createElement(Dashboard, {\n    transactions: transactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), activeTab === 'goals' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"goal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, !goalSet ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleGoalSubmit,\n    className: \"centered-form goal-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Goal Name (optional)\",\n    value: goal.name,\n    onChange: e => setGoal({\n      ...goal,\n      name: e.target.value\n    }),\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Goal Amount (\\u20B9)\",\n    value: goal.amount,\n    onChange: e => setGoal({\n      ...goal,\n      amount: e.target.value\n    }),\n    required: true,\n    min: \"1\",\n    step: \"0.01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Duration (months)\",\n    value: goal.months,\n    onChange: e => setGoal({\n      ...goal,\n      months: e.target.value\n    }),\n    required: true,\n    min: \"1\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, \"Set Goal\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"goal-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, goal.name || \"Your Goal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 22\n    }\n  }, \"Goal Amount:\"), \" \\u20B9\", Number(goal.amount).toLocaleString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 22\n    }\n  }, \"Duration:\"), \" \", goal.months, \" month\", goal.months > 1 ? 's' : ''), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 22\n    }\n  }, \"Monthly Savings Needed:\"), \" \\u20B9\", monthlySavingsNeeded), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 22\n    }\n  }, \"Total Spent So Far:\"), \" \\u20B9\", totalSpent.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-fill\",\n    style: {\n      width: `${progressPercent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: `progress-text ${progressPercent >= 100 ? 'goal-met' : 'goal-not-met'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, progressPercent >= 100 ? \"Goal Met! 🎉\" : `Progress: ${progressPercent.toFixed(1)}%`), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"new-session-button\",\n    onClick: () => {\n      setGoal({\n        name: '',\n        amount: '',\n        months: ''\n      });\n      setGoalSet(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, \"Reset Goal\"))), activeTab === 'export' && (transactions.length > 0 || advice) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactToPrint, {\n    trigger: () => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"download-report-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, \"Download Report as PDF\"),\n    content: () => printRef.current,\n    pageStyle: \"@media print { body { -webkit-print-color-adjust: exact; background: #fff; color: #000; } }\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, (transactions.length > 0 || advice) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"new-session-button\",\n    onClick: handleNewSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"Start New Session\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '-9999px',\n      top: 0,\n      height: 0,\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PrintableReport, {\n    ref: printRef,\n    transactions: transactions,\n    advice: advice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Dashboard","PrintableReport","ReactToPrint","App","transactions","setTransactions","input","setInput","amount","description","category","advice","setAdvice","showAdvice","setShowAdvice","showCharts","setShowCharts","adviceClicked","setAdviceClicked","activeTab","setActiveTab","goal","setGoal","name","months","goalSet","setGoalSet","printRef","get","then","res","data","catch","err","console","error","totalSpent","reduce","sum","t","Number","getMonthKey","dateStr","date","Date","getFullYear","getMonth","monthsSet","Set","map","monthsCount","size","averageSpentPerMonth","handleSubmit","e","preventDefault","post","getAdvice","length","alert","context","join","_res$data","reply","setTimeout","handleNewSession","handleGoalSubmit","monthlySavingsNeeded","toFixed","progressPercent","Math","min","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","top","left","animationDelay","tab","key","onClick","onSubmit","type","value","placeholder","onChange","target","required","idx","id","prev","maxLength","step","toLocaleString","trigger","content","current","pageStyle","position","overflow","ref"],"sources":["C:/Users/JAYANT KUMAR/Desktop/AI-Finance-Manager/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './App2.css';\r\nimport Dashboard from './Dashboard';\r\nimport PrintableReport from './PrintableReport';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst App = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [input, setInput] = useState({ amount: '', description: '', category: '' });\r\n  const [advice, setAdvice] = useState('');\r\n  const [showAdvice, setShowAdvice] = useState(false);\r\n  const [showCharts, setShowCharts] = useState(false);\r\n  const [adviceClicked, setAdviceClicked] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('addTransaction');\r\n  const [goal, setGoal] = useState({ name: '', amount: '', months: '' });\r\n  const [goalSet, setGoalSet] = useState(false);\r\n\r\n  const printRef = useRef();\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/transactions')\r\n      .then(res => setTransactions(res.data))\r\n      .catch(err => console.error('Error fetching transactions:', err));\r\n  }, []);\r\n\r\n  const totalSpent = transactions.reduce((sum, t) => sum + Number(t.amount), 0);\r\n\r\n  const getMonthKey = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    return `${date.getFullYear()}-${date.getMonth() + 1}`;\r\n  };\r\n  const monthsSet = new Set(transactions.map(t => getMonthKey(t.date || new Date())));\r\n  const monthsCount = monthsSet.size || 1;\r\n  const averageSpentPerMonth = totalSpent / monthsCount;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/api/transactions', input);\r\n      setTransactions([...transactions, res.data]);\r\n      setInput({ amount: '', description: '', category: '' });\r\n    } catch (err) {\r\n      console.error('Error adding transaction:', err);\r\n    }\r\n  };\r\n\r\n  const getAdvice = async () => {\r\n    if (transactions.length === 0) {\r\n      alert(\"Please add some transactions before requesting advice.\");\r\n      return;\r\n    }\r\n\r\n    setAdviceClicked(true);\r\n    const context = transactions.map(t => `${t.description} - $${t.amount} (${t.category})`).join('\\n');\r\n    try {\r\n      const res = await axios.post('/api/ai/advice', { context });\r\n      if (res.data?.reply) {\r\n        setAdvice(res.data.reply);\r\n        setShowAdvice(true);\r\n      } else {\r\n        setAdvice('AI could not provide advice.');\r\n        setShowAdvice(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching AI advice:', err);\r\n      setAdvice('Failed to get advice. Check server.');\r\n      setShowAdvice(true);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setAdviceClicked(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleNewSession = () => {\r\n    setTransactions([]);\r\n    setAdvice('');\r\n    setShowAdvice(false);\r\n    setShowCharts(false);\r\n    setActiveTab('addTransaction');\r\n    setGoal({ name: '', amount: '', months: '' });\r\n    setGoalSet(false);\r\n  };\r\n\r\n  const handleGoalSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!goal.amount || !goal.months || goal.amount <= 0 || goal.months <= 0) {\r\n      alert('Please enter valid goal amount and duration.');\r\n      return;\r\n    }\r\n    setGoalSet(true);\r\n  };\r\n\r\n  const monthlySavingsNeeded = goalSet ? (Number(goal.amount) / Number(goal.months)).toFixed(2) : 0;\r\n  const progressPercent = goalSet ? Math.min(100, (totalSpent / Number(goal.amount)) * 100) : 0;\r\n\r\n  return (\r\n    <>\r\n      {/* 🎨 Animated Background */}\r\n      <div className=\"animated-background\">\r\n        <div className=\"circle\" style={{ width: '300px', height: '300px', top: '10%', left: '10%', animationDelay: '0s' }}></div>\r\n        <div className=\"circle\" style={{ width: '400px', height: '400px', top: '40%', left: '60%', animationDelay: '5s' }}></div>\r\n        <div className=\"circle\" style={{ width: '200px', height: '200px', top: '70%', left: '30%', animationDelay: '10s' }}></div>\r\n      </div>\r\n\r\n      <div className=\"app-container\">\r\n        <div className=\"content\">\r\n          <h1 className=\"animated-title\">AI Financial Management System</h1>\r\n\r\n          {/* Tab Buttons */}\r\n          <div className=\"tab-buttons\">\r\n            {['addTransaction', 'viewTransactions', 'advice', 'charts', 'goals', 'export'].map(tab => (\r\n              <button\r\n                key={tab}\r\n                className={activeTab === tab ? 'active-tab' : ''}\r\n                onClick={() => setActiveTab(tab)}\r\n              >\r\n                {tab === 'addTransaction' ? 'Add Transaction' :\r\n                 tab === 'viewTransactions' ? 'View Transactions' :\r\n                 tab === 'advice' ? 'AI Advice' :\r\n                 tab === 'charts' ? 'Financial Charts' :\r\n                 tab === 'goals' ? 'Goals' :\r\n                 'Export Report'}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Tab Content */}\r\n          {activeTab === 'addTransaction' && (\r\n            <form onSubmit={handleSubmit} className=\"centered-form\">\r\n              <input type=\"number\" value={input.amount} placeholder=\"Amount\" onChange={e => setInput({ ...input, amount: e.target.value })} required />\r\n              <input type=\"text\" value={input.description} placeholder=\"Description\" onChange={e => setInput({ ...input, description: e.target.value })} required />\r\n              <input type=\"text\" value={input.category} placeholder=\"Category\" onChange={e => setInput({ ...input, category: e.target.value })} required />\r\n              <button type=\"submit\">Add Transaction</button>\r\n            </form>\r\n          )}\r\n\r\n          {activeTab === 'viewTransactions' && (\r\n            <>\r\n              <h2>Transactions</h2>\r\n              <ul>\r\n                {transactions.map((t, idx) => (\r\n                  <li key={idx}>{t.description} - ${t.amount} ({t.category})</li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n\r\n          {activeTab === 'advice' && (\r\n            <>\r\n              <button\r\n                id=\"get-advice\"\r\n                onClick={getAdvice}\r\n                className={adviceClicked ? 'clicked' : ''}\r\n              >\r\n                Get AI Financial Advice\r\n              </button>\r\n              {advice && (\r\n                <button\r\n                  className=\"toggle-button\"\r\n                  onClick={() => setShowAdvice(prev => !prev)}\r\n                >\r\n                  {showAdvice ? 'Hide Advice' : 'Show Advice'}\r\n                </button>\r\n              )}\r\n              {showAdvice && advice && (\r\n                <div className=\"advice-text\">{advice}</div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {activeTab === 'charts' && transactions.length > 0 && (\r\n            <Dashboard transactions={transactions} />\r\n          )}\r\n\r\n          {activeTab === 'goals' && (\r\n            <div className=\"goal-container\">\r\n              {!goalSet ? (\r\n                <form onSubmit={handleGoalSubmit} className=\"centered-form goal-form\">\r\n                  <input type=\"text\" placeholder=\"Goal Name (optional)\" value={goal.name} onChange={e => setGoal({ ...goal, name: e.target.value })} maxLength={50} />\r\n                  <input type=\"number\" placeholder=\"Goal Amount (₹)\" value={goal.amount} onChange={e => setGoal({ ...goal, amount: e.target.value })} required min=\"1\" step=\"0.01\" />\r\n                  <input type=\"number\" placeholder=\"Duration (months)\" value={goal.months} onChange={e => setGoal({ ...goal, months: e.target.value })} required min=\"1\" step=\"1\" />\r\n                  <button type=\"submit\">Set Goal</button>\r\n                </form>\r\n              ) : (\r\n                <div className=\"goal-summary\">\r\n                  <h2>{goal.name || \"Your Goal\"}</h2>\r\n                  <p><strong>Goal Amount:</strong> ₹{Number(goal.amount).toLocaleString()}</p>\r\n                  <p><strong>Duration:</strong> {goal.months} month{goal.months > 1 ? 's' : ''}</p>\r\n                  <p><strong>Monthly Savings Needed:</strong> ₹{monthlySavingsNeeded}</p>\r\n                  <p><strong>Total Spent So Far:</strong> ₹{totalSpent.toFixed(2)}</p>\r\n                  <div className=\"progress-bar\">\r\n                    <div className=\"progress-fill\" style={{ width: `${progressPercent}%` }}></div>\r\n                  </div>\r\n                  <p className={`progress-text ${progressPercent >= 100 ? 'goal-met' : 'goal-not-met'}`}>\r\n                    {progressPercent >= 100 ? \"Goal Met! 🎉\" : `Progress: ${progressPercent.toFixed(1)}%`}\r\n                  </p>\r\n                  <button className=\"new-session-button\" onClick={() => {\r\n                    setGoal({ name: '', amount: '', months: '' });\r\n                    setGoalSet(false);\r\n                  }}>\r\n                    Reset Goal\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'export' && (transactions.length > 0 || advice) && (\r\n            <>\r\n              <ReactToPrint\r\n                trigger={() => (\r\n                  <button className=\"download-report-button\">Download Report as PDF</button>\r\n                )}\r\n                content={() => printRef.current}\r\n                pageStyle=\"@media print { body { -webkit-print-color-adjust: exact; background: #fff; color: #000; } }\"\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <div className=\"buttons-group\">\r\n            {(transactions.length > 0 || advice) && (\r\n              <button className=\"new-session-button\" onClick={handleNewSession}>\r\n                Start New Session\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Hidden Printable Component */}\r\n          <div style={{ position: 'absolute', left: '-9999px', top: 0, height: 0, overflow: 'hidden' }}>\r\n            <PrintableReport ref={printRef} transactions={transactions} advice={advice} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAAEW,MAAM,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACjF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,gBAAgB,CAAC;EAC5D,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,IAAI,EAAE,EAAE;IAAEf,MAAM,EAAE,EAAE;IAAEgB,MAAM,EAAE;EAAG,CAAC,CAAC;EACtE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM8B,QAAQ,GAAG7B,MAAM,CAAC,CAAC;EAEzBF,SAAS,CAAC,MAAM;IACdG,KAAK,CAAC6B,GAAG,CAAC,mBAAmB,CAAC,CAC3BC,IAAI,CAACC,GAAG,IAAIzB,eAAe,CAACyB,GAAG,CAACC,IAAI,CAAC,CAAC,CACtCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGhC,YAAY,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGE,MAAM,CAACD,CAAC,CAAC/B,MAAM,CAAC,EAAE,CAAC,CAAC;EAE7E,MAAMiC,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IAC9B,OAAO,GAAGC,IAAI,CAACE,WAAW,CAAC,CAAC,IAAIF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;EACvD,CAAC;EACD,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC5C,YAAY,CAAC6C,GAAG,CAACV,CAAC,IAAIE,WAAW,CAACF,CAAC,CAACI,IAAI,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACnF,MAAMM,WAAW,GAAGH,SAAS,CAACI,IAAI,IAAI,CAAC;EACvC,MAAMC,oBAAoB,GAAGhB,UAAU,GAAGc,WAAW;EAErD,MAAMG,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMzB,GAAG,GAAG,MAAM/B,KAAK,CAACyD,IAAI,CAAC,mBAAmB,EAAElD,KAAK,CAAC;MACxDD,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE0B,GAAG,CAACC,IAAI,CAAC,CAAC;MAC5CxB,QAAQ,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAED,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIrD,YAAY,CAACsD,MAAM,KAAK,CAAC,EAAE;MAC7BC,KAAK,CAAC,wDAAwD,CAAC;MAC/D;IACF;IAEAzC,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAM0C,OAAO,GAAGxD,YAAY,CAAC6C,GAAG,CAACV,CAAC,IAAI,GAAGA,CAAC,CAAC9B,WAAW,OAAO8B,CAAC,CAAC/B,MAAM,KAAK+B,CAAC,CAAC7B,QAAQ,GAAG,CAAC,CAACmD,IAAI,CAAC,IAAI,CAAC;IACnG,IAAI;MAAA,IAAAC,SAAA;MACF,MAAMhC,GAAG,GAAG,MAAM/B,KAAK,CAACyD,IAAI,CAAC,gBAAgB,EAAE;QAAEI;MAAQ,CAAC,CAAC;MAC3D,KAAAE,SAAA,GAAIhC,GAAG,CAACC,IAAI,cAAA+B,SAAA,uBAARA,SAAA,CAAUC,KAAK,EAAE;QACnBnD,SAAS,CAACkB,GAAG,CAACC,IAAI,CAACgC,KAAK,CAAC;QACzBjD,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLF,SAAS,CAAC,8BAA8B,CAAC;QACzCE,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/CrB,SAAS,CAAC,qCAAqC,CAAC;MAChDE,aAAa,CAAC,IAAI,CAAC;IACrB;IAEAkD,UAAU,CAAC,MAAM;MACf9C,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM+C,gBAAgB,GAAGA,CAAA,KAAM;IAC7B5D,eAAe,CAAC,EAAE,CAAC;IACnBO,SAAS,CAAC,EAAE,CAAC;IACbE,aAAa,CAAC,KAAK,CAAC;IACpBE,aAAa,CAAC,KAAK,CAAC;IACpBI,YAAY,CAAC,gBAAgB,CAAC;IAC9BE,OAAO,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEf,MAAM,EAAE,EAAE;MAAEgB,MAAM,EAAE;IAAG,CAAC,CAAC;IAC7CE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMwC,gBAAgB,GAAIZ,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAClC,IAAI,CAACb,MAAM,IAAI,CAACa,IAAI,CAACG,MAAM,IAAIH,IAAI,CAACb,MAAM,IAAI,CAAC,IAAIa,IAAI,CAACG,MAAM,IAAI,CAAC,EAAE;MACxEmC,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IACAjC,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMyC,oBAAoB,GAAG1C,OAAO,GAAG,CAACe,MAAM,CAACnB,IAAI,CAACb,MAAM,CAAC,GAAGgC,MAAM,CAACnB,IAAI,CAACG,MAAM,CAAC,EAAE4C,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EACjG,MAAMC,eAAe,GAAG5C,OAAO,GAAG6C,IAAI,CAACC,GAAG,CAAC,GAAG,EAAGnC,UAAU,GAAGI,MAAM,CAACnB,IAAI,CAACb,MAAM,CAAC,GAAI,GAAG,CAAC,GAAG,CAAC;EAE7F,oBACEb,KAAA,CAAA6E,aAAA,CAAA7E,KAAA,CAAA8E,QAAA,qBAEE9E,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,QAAQ;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,GAAG,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,cAAc,EAAE;IAAK,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACzHrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,QAAQ;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,GAAG,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,cAAc,EAAE;IAAK,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACzHrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,QAAQ;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,GAAG,EAAE,KAAK;MAAEC,IAAI,EAAE,KAAK;MAAEC,cAAc,EAAE;IAAM,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CACtH,CAAC,eAENrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBrF,KAAA,CAAA6E,aAAA;IAAIE,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gCAAkC,CAAC,eAGlErF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzB,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC/B,GAAG,CAACsC,GAAG,iBACpF5F,KAAA,CAAA6E,aAAA;IACEgB,GAAG,EAAED,GAAI;IACTb,SAAS,EAAEvD,SAAS,KAAKoE,GAAG,GAAG,YAAY,GAAG,EAAG;IACjDE,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAACmE,GAAG,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhCO,GAAG,KAAK,gBAAgB,GAAG,iBAAiB,GAC5CA,GAAG,KAAK,kBAAkB,GAAG,mBAAmB,GAChDA,GAAG,KAAK,QAAQ,GAAG,WAAW,GAC9BA,GAAG,KAAK,QAAQ,GAAG,kBAAkB,GACrCA,GAAG,KAAK,OAAO,GAAG,OAAO,GACzB,eACK,CACT,CACE,CAAC,EAGLpE,SAAS,KAAK,gBAAgB,iBAC7BxB,KAAA,CAAA6E,aAAA;IAAMkB,QAAQ,EAAErC,YAAa;IAACqB,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrDrF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAEtF,KAAK,CAACE,MAAO;IAACqF,WAAW,EAAC,QAAQ;IAACC,QAAQ,EAAExC,CAAC,IAAI/C,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,MAAM,EAAE8C,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACI,QAAQ;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACzIrF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,MAAM;IAACC,KAAK,EAAEtF,KAAK,CAACG,WAAY;IAACoF,WAAW,EAAC,aAAa;IAACC,QAAQ,EAAExC,CAAC,IAAI/C,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEG,WAAW,EAAE6C,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACI,QAAQ;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACtJrF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,MAAM;IAACC,KAAK,EAAEtF,KAAK,CAACI,QAAS;IAACmF,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAExC,CAAC,IAAI/C,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEI,QAAQ,EAAE4C,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACI,QAAQ;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7IrF,KAAA,CAAA6E,aAAA;IAAQmB,IAAI,EAAC,QAAQ;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CACzC,CACP,EAEA7D,SAAS,KAAK,kBAAkB,iBAC/BxB,KAAA,CAAA6E,aAAA,CAAA7E,KAAA,CAAA8E,QAAA,qBACE9E,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrBrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG5E,YAAY,CAAC6C,GAAG,CAAC,CAACV,CAAC,EAAE0D,GAAG,kBACvBtG,KAAA,CAAA6E,aAAA;IAAIgB,GAAG,EAAES,GAAI;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEzC,CAAC,CAAC9B,WAAW,EAAC,MAAI,EAAC8B,CAAC,CAAC/B,MAAM,EAAC,IAAE,EAAC+B,CAAC,CAAC7B,QAAQ,EAAC,GAAK,CAC/D,CACC,CACJ,CACH,EAEAS,SAAS,KAAK,QAAQ,iBACrBxB,KAAA,CAAA6E,aAAA,CAAA7E,KAAA,CAAA8E,QAAA,qBACE9E,KAAA,CAAA6E,aAAA;IACE0B,EAAE,EAAC,YAAY;IACfT,OAAO,EAAEhC,SAAU;IACnBiB,SAAS,EAAEzD,aAAa,GAAG,SAAS,GAAG,EAAG;IAAA0D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3C,yBAEO,CAAC,EACRrE,MAAM,iBACLhB,KAAA,CAAA6E,aAAA;IACEE,SAAS,EAAC,eAAe;IACzBe,OAAO,EAAEA,CAAA,KAAM3E,aAAa,CAACqF,IAAI,IAAI,CAACA,IAAI,CAAE;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE3CnE,UAAU,GAAG,aAAa,GAAG,aACxB,CACT,EACAA,UAAU,IAAIF,MAAM,iBACnBhB,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErE,MAAY,CAE5C,CACH,EAEAQ,SAAS,KAAK,QAAQ,IAAIf,YAAY,CAACsD,MAAM,GAAG,CAAC,iBAChD/D,KAAA,CAAA6E,aAAA,CAACxE,SAAS;IAACI,YAAY,EAAEA,YAAa;IAAAuE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzC,EAEA7D,SAAS,KAAK,OAAO,iBACpBxB,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5B,CAACvD,OAAO,gBACP9B,KAAA,CAAA6E,aAAA;IAAMkB,QAAQ,EAAExB,gBAAiB;IAACQ,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnErF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,MAAM;IAACE,WAAW,EAAC,sBAAsB;IAACD,KAAK,EAAEvE,IAAI,CAACE,IAAK;IAACuE,QAAQ,EAAExC,CAAC,IAAIhC,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,IAAI,EAAE+B,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACQ,SAAS,EAAE,EAAG;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpJrF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,QAAQ;IAACE,WAAW,EAAC,sBAAiB;IAACD,KAAK,EAAEvE,IAAI,CAACb,MAAO;IAACsF,QAAQ,EAAExC,CAAC,IAAIhC,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEb,MAAM,EAAE8C,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACI,QAAQ;IAACzB,GAAG,EAAC,GAAG;IAAC8B,IAAI,EAAC,MAAM;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACnKrF,KAAA,CAAA6E,aAAA;IAAOmB,IAAI,EAAC,QAAQ;IAACE,WAAW,EAAC,mBAAmB;IAACD,KAAK,EAAEvE,IAAI,CAACG,MAAO;IAACsE,QAAQ,EAAExC,CAAC,IAAIhC,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEG,MAAM,EAAE8B,CAAC,CAACyC,MAAM,CAACH;IAAM,CAAC,CAAE;IAACI,QAAQ;IAACzB,GAAG,EAAC,GAAG;IAAC8B,IAAI,EAAC,GAAG;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAClKrF,KAAA,CAAA6E,aAAA;IAAQmB,IAAI,EAAC,QAAQ;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAClC,CAAC,gBAEPrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK3D,IAAI,CAACE,IAAI,IAAI,WAAgB,CAAC,eACnC5B,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,cAAoB,CAAC,WAAE,EAACxC,MAAM,CAACnB,IAAI,CAACb,MAAM,CAAC,CAAC8F,cAAc,CAAC,CAAK,CAAC,eAC5E3G,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,WAAiB,CAAC,KAAC,EAAC3D,IAAI,CAACG,MAAM,EAAC,QAAM,EAACH,IAAI,CAACG,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAM,CAAC,eACjF7B,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,yBAA+B,CAAC,WAAE,EAACb,oBAAwB,CAAC,eACvExE,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGrF,KAAA,CAAA6E,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,qBAA2B,CAAC,WAAE,EAAC5C,UAAU,CAACgC,OAAO,CAAC,CAAC,CAAK,CAAC,eACpEzE,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,eAAe;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,GAAGb,eAAe;IAAI,CAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAC1E,CAAC,eACNrF,KAAA,CAAA6E,aAAA;IAAGE,SAAS,EAAE,iBAAiBL,eAAe,IAAI,GAAG,GAAG,UAAU,GAAG,cAAc,EAAG;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnFX,eAAe,IAAI,GAAG,GAAG,cAAc,GAAG,aAAaA,eAAe,CAACD,OAAO,CAAC,CAAC,CAAC,GACjF,CAAC,eACJzE,KAAA,CAAA6E,aAAA;IAAQE,SAAS,EAAC,oBAAoB;IAACe,OAAO,EAAEA,CAAA,KAAM;MACpDnE,OAAO,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEf,MAAM,EAAE,EAAE;QAAEgB,MAAM,EAAE;MAAG,CAAC,CAAC;MAC7CE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAE;IAAAiD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAEK,CACL,CAEJ,CACN,EAEA7D,SAAS,KAAK,QAAQ,KAAKf,YAAY,CAACsD,MAAM,GAAG,CAAC,IAAI/C,MAAM,CAAC,iBAC5DhB,KAAA,CAAA6E,aAAA,CAAA7E,KAAA,CAAA8E,QAAA,qBACE9E,KAAA,CAAA6E,aAAA,CAACtE,YAAY;IACXqG,OAAO,EAAEA,CAAA,kBACP5G,KAAA,CAAA6E,aAAA;MAAQE,SAAS,EAAC,wBAAwB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,wBAA8B,CACzE;IACFwB,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC8E,OAAQ;IAChCC,SAAS,EAAC,6FAA6F;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxG,CACD,CACH,eAEDrF,KAAA,CAAA6E,aAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3B,CAAC5E,YAAY,CAACsD,MAAM,GAAG,CAAC,IAAI/C,MAAM,kBACjChB,KAAA,CAAA6E,aAAA;IAAQE,SAAS,EAAC,oBAAoB;IAACe,OAAO,EAAExB,gBAAiB;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAE1D,CAEP,CAAC,eAGNrF,KAAA,CAAA6E,aAAA;IAAKS,KAAK,EAAE;MAAE0B,QAAQ,EAAE,UAAU;MAAEtB,IAAI,EAAE,SAAS;MAAED,GAAG,EAAE,CAAC;MAAED,MAAM,EAAE,CAAC;MAAEyB,QAAQ,EAAE;IAAS,CAAE;IAAAjC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3FrF,KAAA,CAAA6E,aAAA,CAACvE,eAAe;IAAC4G,GAAG,EAAElF,QAAS;IAACvB,YAAY,EAAEA,YAAa;IAACO,MAAM,EAAEA,MAAO;IAAAgE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC1E,CACF,CACF,CACL,CAAC;AAEP,CAAC;AAED,eAAe7E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}